# Docker Compose
COMPOSE_PROJECT_NAME=drone

# Drone CI
### General configuration
DRONE_AGENTS_ENABLED=true
DRONE_GIT_ALWAYS_AUTH=true
DRONE_STATUS_NAME=drone
### Configure one of the following Git providers and keep the others commented
### Gitea
#DRONE_GITEA_CLIENT_ID=<gitea-client-id>
#DRONE_GITEA_CLIENT_SECRET=<gitea-client-secret>
#DRONE_GITEA_SERVER=<gitea-url>
### GitHub
#DRONE_GITHUB_CLIENT_ID=<github-client-id>
#DRONE_GITHUB_CLIENT_SECRET=<github-client-secret>
DRONE_RPC_SECRET=<rpc-secret>
DRONE_SERVER_HOST=<drone-server-host>
DRONE_SERVER_PROTO=https
### Admin user configuration
DRONE_USER_CREATE=<admin-user-configuration>
### Limit user registration
DRONE_USER_FILTER=<user-filter>
## Limit repositories per user/org
DRONE_REPOSITORY_FILTER=<repository-filter>
### Database configuration
DRONE_DATABASE_DRIVER=postgres
DRONE_DATABASE_DATASOURCE=postgres://drone:<postgresql-password>@postgresql:5432/drone?sslmode=disable
DRONE_DATABASE_SECRET=<database-encryption-secret>
### Blob storage configuration
DRONE_S3_ENDPOINT=<s3-url>
DRONE_S3_PATH_STYLE=false # set to true, if MinIO is used
DRONE_S3_BUCKET=<s3-bucket>
#DRONE_S3_PREFIX=logs
#DRONE_S3_SKIP_VERIFY=false
AWS_ACCESS_KEY_ID=<s3-access-key>
AWS_SECRET_ACCESS_KEY=<s3-secret-key>
AWS_DEFAULT_REGION=<s3-default-region> # e.g. eu-central-1
AWS_REGION=<s3-region> # e.g. eu-central-1

# PostgreSQL
POSTGRES_USER=drone
POSTGRES_PASSWORD=<postgresql-password>
POSTGRES_DB=drone
